{"version":3,"sources":["skylark-blueimp-slidable.js"],"names":["define","langx","browser","noder","styler","eventer","$","plugins","touch","Slidable","Plugin","inherit","klassName","pluginName","options","selectors","slidesContainer","titleElement","indicatorContainer","classes","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","controlsClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","activeIndicatorClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","index","preloadRange","transitionSpeed","slideshowTransitionSpeed","undefined","thumbnailIndicators","onopen","noop","onopened","onslide","onslideend","onslidecomplete","onclose","onclosed","_construct","gallery","this","overrided","_velm","elmx","list","items","num","length","initStartIndex","initWidget","initEventListeners","ontransitionend","play","createIndicator","obj","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","title","getElementsByTagName","find","src","style","backgroundImage","addIndicator","setAttribute","appendChild","indicators","push","setActiveIndicator","activeIndicator","removeClass","addClass","slide","to","speed","window","clearTimeout","timeout","direction","naturalDirection","diff","circle","Math","abs","positions","slideWidth","move","getIndex","getNumber","prev","next","time","cancel","interval","elements","debounce","bind","pause","add","i","concat","Array","prototype","slice","call","addSlide","positionSlide","initSlides","resetSlides","empty","unloadAllSlides","slides","handleClose","destroyEventListeners","hide","document","body","overflow","bodyOverflowStyle","close","that","on","support","transition","end","closeHandler","event","target","_elm","off","dist","translateX","translate","x","y","css","translateY","onresize","onmousedown","which","nodeName","preventDefault","originalEvent","touches","pageX","pageY","ontouchstart","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","stop","Date","now","isScrolling","touchDelta","touchDeltaX","indices","scale","unshift","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","isValidClose","slideHeight","ontouchcancel","defer","oncomplete","srcElement","parent","parentNode","getNodeIndex","type","clientHeight","maxHeight","onload","onerror","onkeydown","keyCode","toggleControls","stopImmediatePropagation","toggleSlideshow","handleClick","isTarget","className","hasClass","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","firstChild","text","alt","createTextNode","createElement","callback","element","renderItem","loadElement","proxyListener","limit","min","j","hasOwnProperty","unloadSlide","slidePrototype","width","left","reload","query","children","imagePrototype","elementPrototype","clientWidth","removeChild","len","parseInt","getAttribute","isTouchEnabled","handleOpen","first","openHandler","show","register","attach","slidable","main"],"mappings":"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","file":"../skylark-blueimp-slidable.js","sourcesContent":["define('skylark-blueimp-slidable/slidable',[\r\n  'skylark-langx/langx',\r\n  'skylark-domx-browser',\r\n  'skylark-domx-noder',\r\n  'skylark-domx-styler',\r\n  'skylark-domx-eventer',\r\n  'skylark-domx-query',\r\n  \"skylark-domx-plugins-base\",\r\n  \"skylark-devices-points/touch\",\r\n], function (langx,browser, noder, styler, eventer, $,plugins,touch) {\r\n  'use strict'\r\n  var Slidable = plugins.Plugin.inherit({\r\n    klassName: \"Slidable\",\r\n\r\n    pluginName : \"blueimp.slidable\",\r\n\r\n    options: {\r\n      selectors : {\r\n        // The tag name, Id, element or querySelector of the slides container:\r\n        slidesContainer: 'div',\r\n        // The tag name, Id, element or querySelector of the title element:\r\n        titleElement: 'h3',\r\n\r\n        // The tag name, Id, element or querySelector of the indicator container:\r\n        indicatorContainer: 'ol'\r\n      },\r\n\r\n      classes : {\r\n        // The class to add when the gallery is visible:\r\n        displayClass: 'lark-domx-slidable-display',\r\n        // The class to add when the gallery only displays one element:\r\n        singleClass: 'lark-domx-slidable-single',\r\n        // The class to add when the left edge has been reached:\r\n        leftEdgeClass: 'lark-domx-slidable-left',\r\n        // The class to add when the right edge has been reached:\r\n        rightEdgeClass: 'lark-domx-slidable-right',\r\n        // The class to add when the automatic slideshow is active:\r\n        playingClass: 'lark-domx-slidable-playing',\r\n\r\n        // The class to add when the gallery controls are visible:\r\n        controlsClass: 'lark-domx-slidable-controls',\r\n\r\n        // The class for all slides:\r\n        slideClass: 'slide',\r\n        // The slide class for loading elements:\r\n        slideLoadingClass: 'slide-loading',\r\n        // The slide class for elements that failed to load:\r\n        slideErrorClass: 'slide-error',\r\n        // The class for the content element loaded into each slide:\r\n        slideContentClass: 'slide-content',\r\n        // The class for the \"toggle\" control:\r\n        toggleClass: 'toggle',\r\n        // The class for the \"prev\" control:\r\n        prevClass: 'prev',\r\n        // The class for the \"next\" control:\r\n        nextClass: 'next',\r\n        // The class for the \"close\" control:\r\n        closeClass: 'close',\r\n        // The class for the \"play-pause\" toggle control:\r\n        playPauseClass: 'play-pause',\r\n\r\n        // The class for the active indicator:\r\n        activeIndicatorClass: 'active'\r\n      },\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: false,\r\n\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: false,\r\n\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: false,\r\n\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: false,\r\n\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n\r\n\r\n        // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n\r\n\r\n\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n\r\n      // Callback function executed when the Gallery is initialized.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopen: langx.noop,\r\n      // Callback function executed when the Gallery has been initialized\r\n      // and the initialization transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopened: langx.noop,\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: langx.noop,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: langx.noop,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: langx.noop,\r\n      // Callback function executed when the Gallery is about to be closed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclose: langx.noop,\r\n      // Callback function executed when the Gallery has been closed\r\n      // and the closing transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclosed: langx.noop\r\n    },\r\n\r\n    _construct: function (gallery, options) {\r\n      this.overrided(gallery, options);\r\n      this._velm = this.elmx();\r\n\r\n      this.list = this.options.items;\r\n      //this.options.container = this.elm();\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      if (this.initWidget() === false) {\r\n        return false\r\n      }\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n    },\r\n\r\n    createIndicator: function (obj) {\r\n      var gallery = this.gallery,\r\n        indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = obj.title;\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        thumbnailUrl = obj[\"thumbnail\"]\r\n\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.classes.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.classes.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (!this.options.continuous) {\r\n        to = this.circle(to)\r\n      }\r\n      // 1: backward, -1: forward:\r\n      direction = Math.abs(index - to) / (index - to)\r\n      // Get the actual position of the slide:\r\n      if (this.options.continuous) {\r\n        naturalDirection = direction\r\n        direction = -this.positions[this.circle(to)] / this.slideWidth\r\n        // If going forward but to < index, use to = slides.length + to\r\n        // If going backward but to > index, use to = -slides.length + to\r\n        if (direction !== naturalDirection) {\r\n          to = -direction * this.num + to\r\n        }\r\n      }\r\n      diff = Math.abs(index - to) - 1\r\n      // Move all the slides between index and to in the right direction:\r\n      while (diff) {\r\n        diff -= 1\r\n        this.move(\r\n          this.circle((to > index ? to : index) - diff - 1),\r\n          this.slideWidth * direction,\r\n          0\r\n        )\r\n      }\r\n      to = this.circle(to)\r\n      this.move(index, this.slideWidth * direction, speed)\r\n      this.move(to, 0, speed)\r\n      if (this.options.continuous) {\r\n        this.move(\r\n          this.circle(to - direction),\r\n          -(this.slideWidth * direction),\r\n          0\r\n        )\r\n      }\r\n\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      ///window.clearTimeout(this.timeout);\r\n      if (this.timeout) {\r\n        this.timeout.cancel();\r\n        this.timeout = null;\r\n      }\r\n      this.interval = time || this.options.slideshowInterval\r\n      if (this.elements[this.index] > 1) {\r\n        this.timeout = langx.debounce(this.slide.bind(this),this.interval,true)(this.index + 1, this.options.slideshowTransitionSpeed);\r\n      }\r\n      this._velm.addClass(this.options.classes.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      //window.clearTimeout(this.timeout)\r\n      if (this.timeout) {\r\n        this.timeout.cancel();\r\n        this.timeout = null;\r\n      }\r\n      this.interval = null\r\n      //if (this.cancelAnimationFrame) {\r\n      //  this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n      //  this.animationFrameId = null\r\n      //}\r\n      this._velm.removeClass(this.options.classes.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this._velm.removeClass(this.options.classes.leftEdgeClass)\r\n      }\r\n      this._velm\r\n        .removeClass(this.options.classes.rightEdgeClass)\r\n        .removeClass(this.options.classes.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty();\r\n      this.unloadAllSlides();\r\n      this.slides = [];\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    handleClose: function () {\r\n      if (this.activeIndicator) {\r\n        this.activeIndicator.removeClass(this.options.classes.activeIndicatorClass)\r\n      }\r\n\r\n      var options = this.options\r\n      this.destroyEventListeners()\r\n      // Cancel the slideshow:\r\n      this.pause();\r\n      this._velm.hide();\r\n      this._velm.removeClass([options.displayClass,options.singleClass,options.leftEdgeClass,options.rightEdgeClass]);\r\n      if (options.hidePageScrollbars) {\r\n        document.body.style.overflow = this.bodyOverflowStyle\r\n      }\r\n      if (this.options.clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      if (this.options.onclosed) {\r\n        this.options.onclosed.call(this)\r\n      }\r\n    },\r\n\r\n    close: function () {\r\n      var that = this\r\n\r\n      function closeHandler(event) {\r\n        if (event.target === that._elm) {\r\n          that._velm.off(browser.support.transition.end, closeHandler)\r\n          that.handleClose()\r\n        }\r\n      }\r\n      if (this.options.onclose) {\r\n        this.options.onclose.call(this)\r\n      }\r\n      if (this.options.displayTransition) {\r\n        this._velm.on(browser.support.transition.end, closeHandler)\r\n        this._velm.removeClass(this.options.classes.displayClass)\r\n      } else {\r\n        this.handleClose()\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var slide = this.slides[index];\r\n      styler.css(slide,\"transitionDuration\",speed + \"ms\");\r\n      styler.css(slide,\"transform\", 'translate(' + x + 'px, ' +  y +  'px)' +  ' translateZ(0)');\r\n\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault();\r\n        (event.originalEvent || event).touches = [{\r\n          pageX: event.pageX,\r\n          pageY: event.pageY\r\n        }]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {;\r\n        (event.originalEvent || event).touches = [{\r\n          pageX: event.pageX,\r\n          pageY: event.pageY\r\n        }]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        eventer.stop(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        eventer.stop(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n              (index === this.num - 1 && touchDeltaX < 0) ?\r\n              Math.abs(touchDeltaX) / this.slideWidth + 1 :\r\n              1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        eventer.stop(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose = !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (isValidClose) {\r\n          this.close()\r\n        } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        ///this.setTimeout(this.options.onslideend, [this.index, slide])\r\n        langx.defer(this.options.onslideend, [this.index, slide]);\r\n      }\r\n    },\r\n\r\n    oncomplete: function (event) {\r\n      var target = event.target || event.srcElement\r\n      var parent = target && target.parentNode\r\n      var index\r\n      if (!target || !parent) {\r\n        return\r\n      }\r\n      index = this.getNodeIndex(parent)\r\n      $(parent).removeClass(this.options.classes.slideLoadingClass)\r\n      if (event.type === 'error') {\r\n        $(parent).addClass(this.options.classes.slideErrorClass)\r\n        this.elements[index] = 3 // Fail\r\n      } else {\r\n        this.elements[index] = 2 // Done\r\n      }\r\n      // Fix for IE7's lack of support for percentage max-height:\r\n      if (target.clientHeight > this._velm.clientHeight()) {\r\n        target.style.maxHeight = this._velm.clientHeight()\r\n      }\r\n      if (this.interval && this.slides[this.index] === parent) {\r\n        this.play()\r\n      }\r\n      ///this.setTimeout(this.options.onslidecomplete, [index, parent])\r\n      langx.defer(this.options.onslidecomplete, [index, parent]);\r\n    },\r\n\r\n    onload: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onerror: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            eventer.stop(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          if (this.options.closeOnEscape) {\r\n            this.close()\r\n            // prevent Esc from closing other things\r\n            event.stopImmediatePropagation()\r\n          }\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            eventer.stop(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            eventer.stop(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            eventer.stop(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        eventer.stop(event)\r\n        this.slide(this.getNodeIndex(target));\r\n        return;\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n        return;\r\n      }\r\n\r\n\r\n      function isTarget(className) {\r\n        return $(target).hasClass(className) || $(parent).hasClass(className)\r\n      }\r\n      if (isTarget(options.classes.toggleClass)) {\r\n        // Click on \"toggle\" control\r\n        eventer.stop(event)\r\n        this.toggleControls()\r\n      } else if (isTarget(options.classes.prevClass)) {\r\n        // Click on \"prev\" control\r\n        eventer.stop(event)\r\n        this.prev()\r\n      } else if (isTarget(options.classes.nextClass)) {\r\n        // Click on \"next\" control\r\n        eventer.stop(event)\r\n        this.next()\r\n      } else if (isTarget(options.classes.closeClass)) {\r\n        // Click on \"close\" control\r\n        eventer.stop(event)\r\n        this.close()\r\n      } else if (isTarget(options.classes.playPauseClass)) {\r\n        // Click on \"play-pause\" control\r\n        eventer.stop(event)\r\n        this.toggleSlideshow()\r\n      } else if (parent === this.slidesContainer[0]) {\r\n        // Click on slide background\r\n        if (options.closeOnSlideClick) {\r\n          eventer.stop(event)\r\n          this.close()\r\n        } else if (options.toggleControlsOnSlideClick) {\r\n          eventer.stop(event)\r\n          this.toggleControls()\r\n        }\r\n      } else if (\r\n        parent.parentNode &&\r\n        parent.parentNode === this.slidesContainer[0]\r\n      ) {\r\n        // Click on displayed element\r\n        if (options.toggleControlsOnSlideClick) {\r\n          eventer.stop(event)\r\n          this.toggleControls()\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this._velm.addClass(this.options.classes.leftEdgeClass)\r\n      } else {\r\n        this._velm.removeClass(this.options.classes.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this._velm.addClass(this.options.classes.rightEdgeClass)\r\n      } else {\r\n        this._velm.removeClass(this.options.classes.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index);\r\n      this.setActiveIndicator(index)\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      ///this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n      langx.defer(this.options.onslide, [index, this.slides[index]]);\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var element = this.options.renderItem(obj, callback);\r\n      $(element).addClass(this.options.classes.slideContentClass);\r\n      return element;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n              this.options.classes.slideErrorClass\r\n            ) ?\r\n            3 :\r\n            2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).addClass(this.options.classes.slideLoadingClass)\r\n          this.slides[index].appendChild(\r\n            this.createElement(this.list[index], this.proxyListener)\r\n          )\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide);\r\n      this.addIndicator(index)\r\n\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      styler.css(slide,{\r\n         \"width\" : this.slideWidth + 'px' ,\r\n         \"left\" : index * -this.slideWidth + 'px'\r\n      });\r\n      this.move(\r\n        index,\r\n        this.index > index ?\r\n        -this.slideWidth :\r\n        this.index < index ? this.slideWidth : 0,\r\n        0\r\n      )\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      if (!reload) {\r\n        this.indicatorContainer = this._velm.query(\r\n          this.options.selectors.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n      }\r\n\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.classes.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this._velm.clientWidth();\r\n      this.slideHeight = this._velm.clientHeight();\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.classes.controlsClass\r\n      if (this._velm.hasClass(controlsClass)) {\r\n        this._velm.removeClass(controlsClass)\r\n      } else {\r\n        this._velm.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var index = this.options.index;\r\n\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n\r\n      function proxyListener(event) {\r\n        var type =\r\n          browser.support.transition.end === event.type ?\r\n          'transitionend' :\r\n          event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this._velm.on('click', proxyListener)\r\n      if (touch.isTouchEnabled()) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n\r\n      slidesContainer.on(browser.support.transition.end, proxyListener)\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this._velm.off('click', proxyListener)\r\n      if (touch.isTouchEnabled()) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents ) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      slidesContainer.off(browser.support.transition.end, proxyListener)\r\n    },\r\n\r\n    handleOpen: function () {\r\n      if (this.options.onopened) {\r\n        this.options.onopened.call(this)\r\n      }\r\n    },\r\n\r\n    initWidget: function () {\r\n      var that = this\r\n\r\n      function openHandler(event) {\r\n        if (event.target === that._elm) {\r\n          that._velm.off(browser.support.transition.end, openHandler)\r\n          that.handleOpen()\r\n        }\r\n      }\r\n      this.slidesContainer = this._velm\r\n        .query(this.options.selectors.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n\r\n        return false\r\n      }\r\n      this.titleElement = this._velm.query(this.options.selectors.titleElement).first()\r\n      if (this.num === 1) {\r\n        this._velm.addClass(this.options.classes.singleClass)\r\n      }\r\n      if (this.options.onopen) {\r\n        this.options.onopen.call(this)\r\n      }\r\n      if (this.options.displayTransition) {\r\n        this._velm.on(browser.support.transition.end, openHandler)\r\n      } else {\r\n        this.handleOpen()\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this._velm.show();\r\n      this.initSlides()\r\n      this._velm.addClass(this.options.classes.displayClass)\r\n    }\r\n  });\r\n\r\n\r\n  plugins.register(Slidable);\r\n\r\n  return langx.attach(\"intg.blueimp.Slidable\", Slidable);\r\n});\ndefine('skylark-blueimp-slidable/main',[\r\n    \"./slidable\"\r\n], function(slidable) {\r\n    return slidable;\r\n});\ndefine('skylark-blueimp-slidable', ['skylark-blueimp-slidable/main'], function (main) { return main; });\n\n"]}